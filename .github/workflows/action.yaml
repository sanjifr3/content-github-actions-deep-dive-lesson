name: Deploy Lambda Function

on:
    push:
        branches:
            - main
    
jobs:
    
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v4
              with: 
                python-version: 3.8
            
            - name: Install libraries
              run: |
                cd function
                python -m pip install --upgrade pip
                if [ -f requirements.txt ]; then pip install -r requirements.txt -t .; fi
            
            - name: Create ZIP bundle
              run: |
                cd function
                zip -r ../${{ github.sha }}.zip .
            
            - name: Archive artifact
              uses: actions/upload-artifact@v4
              with:
                name: zipped-bundle
                path: ${{ github.sha }}.zip

    publish:
        runs-on: ubuntu-latest
        needs: build
        
        steps:
            - name: Get latest tag
              id: get-latest-tag
              uses: actions-ecosystem/action-get-latest-tag@v1

            - name: Increment version
              id: increment_version
              run: |
                latest_tag=${{ steps.get_latest_tag.outputs.tag }}
                if [[ $latest_tag =~ ^v?[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
                  IFS='.' read -r -a version_parts <<< "${latest_tag#v}"
                  version_parts[2]=$((version_parts[2] + 1))
                  new_version="v${version_parts[0]}.${version_parts[1]}.${version_parts[2]}"
                  echo "new_version=$new_version" >> $GITHUB_ENV
                else
                  # echo "Invalid tag format: $latest_tag"
                  # exit 1
                  echo "new_version=v0.0.1" >> $GITHUB_ENV
                fi

            - name: Create release
              id: create-release
              uses: actions/create-release@v1
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                tag_name: ${{ steps.increment_version.outputs.new_tag }}
                release_name: Release from ${{ steps.increment_version.outputs.new_tag }}
                body: |
                    New release from ${{ github.sha }}. 
                    Release notes are in the documentation site.
                draft: false
                prerelease: false
            
            - name: Download artifact
              uses: actions/download-artifact@v4
              with:
                name: zipped-bundle
                path: ./
            
            - name: Upload release asset
              uses: actions/upload-release-asset@v1
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                upload_url: ${{ steps.create-release.outputs.upload_url }}
                asset_path: ./${{ github.sha }}.zip # Same name as before
                asset_name: source_code_with_libraries.zip
                asset_content_type: application/zip

    upload:
        runs-on: ubuntu-latest
        needs: build

        steps:
            - name: Download artifact
              uses: actions/download-artifact@v4
              with:
                name: zipped-bundle
                path: ./
            
            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: us-east-1
            
            - name: Upload to S3
              run: aws s3 cp ${{ github.sha }}.zip s3://my-bucket-sr43243/${{ github.sha }}.zip

    deploy:
        runs-on: ubuntu-latest
        needs: upload

        steps:
            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: us-east-1
            
            - name: Deploy to Lambda
              run: |
                aws lambda update-function-code \
                  --function-name my-function \
                  --s3-bucket my-bucket-sr43243 \
                  --s3-key ${{ github.sha }}.zip \
                  --publish
