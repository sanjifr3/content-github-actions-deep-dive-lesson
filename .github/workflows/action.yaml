name: Deploy Lambda Function

on:
  push:
    branches:
      - main
    
jobs:

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      
      - name: Install libraries
        run: pip install flake8
      
      - name: Lint with flake8
        run: |
          cd function
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --max-complexity=10 --max-line-length=127 --statistics
  
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with: 
          python-version: 3.8
      
      - name: Install libraries
        run: |
          cd function
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt -t .; fi
      
      - name: Create ZIP bundle
        run: |
          cd function
          zip -r ../${{ github.sha }}.zip .
      
      - name: Archive artifact
        uses: actions/upload-artifact@v4
        with:
          name: zipped-bundle
          path: ${{ github.sha }}.zip

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Create release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number}}
          release_name: Release from ${{ github.run_number }}
          body: |
              New release from ${{ github.sha }}. 
              Release notes are in the documentation site.
          draft: false
          prerelease: false
      
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: zipped-bundle
          path: ./
      
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./${{ github.sha }}.zip # Same name as before
          asset_name: source_code_with_libraries.zip
          asset_content_type: application/zip

  upload:
    name: Upload
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: zipped-bundle
          path: ./
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Upload to S3
        run: aws s3 cp ${{ github.sha }}.zip s3://my-bucket-sr43243/${{ github.sha }}.zip

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: upload

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Verify AWS Account ID
        run: echo ${{ secrets.AWS_ACCOUNT_ID }}

      - name: Create test function  
        run: |
          aws lambda create-function --function-name my-test-function \
            --code S3Bucket=my-bucket-sr43243,S3Key=${{ github.sha }}.zip \
            --handler lambda_function.lambda_handler --runtime python3.8 \
            --role arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/my-lambda-role 
      
      - name: Wait 30 seconds
        run: sleep 30
      
      - name: Destroy test function
        if : ${{ always() }}
        run: aws lambda delete-function --function-name my-test-function

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Deploy to Lambda
        run: |
          aws lambda update-function-code \
            --function-name my-function \
            --s3-bucket my-bucket-sr43243 \
            --s3-key ${{ github.sha }}.zip \
            --publish
